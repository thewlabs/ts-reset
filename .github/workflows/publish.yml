name: Release & Publish

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      publish_type:
        description: "Type of release"
        required: true
        default: "auto"
        type: choice
        options:
          - auto
          - patch
          - minor
          - major

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  pre-release-checks:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    outputs:
      should-publish: ${{ steps.changesets.outputs.hasChangesets }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run full CI pipeline
        run: pnpm run ci

      - name: Check for changesets
        id: changesets
        run: |
          if [ -d ".changeset" ] && [ "$(ls -A .changeset | grep -v README)" ]; then
            echo "hasChangesets=true" >> $GITHUB_OUTPUT
          else
            echo "hasChangesets=false" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release & Publish
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [pre-release-checks]
    if: needs.pre-release-checks.outputs.should-publish == 'true' || github.event_name == 'workflow_dispatch'
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"
          registry-url: "https://registry.npmjs.org"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Manual release (if workflow_dispatch)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_type != 'auto'
        run: |
          case "${{ github.event.inputs.publish_type }}" in
            patch)
              pnpm changeset add --empty
              pnpm changeset version --snapshot patch
              ;;
            minor)
              pnpm changeset add --empty
              pnpm changeset version --snapshot minor
              ;;
            major)
              pnpm changeset add --empty
              pnpm changeset version --snapshot major
              ;;
          esac

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm run release
          title: "chore: version packages"
          commit: "chore: version packages"
          version: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate provenance attestation
        if: steps.changesets.outputs.published == 'true'
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "dist/**/*"

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          release_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          body: |
            ## What's Changed
            
            Release notes will be available in the changelog.
            
            **Full Changelog**: https://github.com/${{ github.repository }}/releases
          draft: false
          prerelease: ${{ contains(fromJson(steps.changesets.outputs.publishedPackages)[0].version, 'alpha') || contains(fromJson(steps.changesets.outputs.publishedPackages)[0].version, 'beta') || contains(fromJson(steps.changesets.outputs.publishedPackages)[0].version, 'rc') }}

      - name: Send Slack notification
        if: steps.changesets.outputs.published == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          fields: repo,message,commit,author,took
          text: |
            ðŸš€ Successfully published @thewlabs/ts-reset@${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
            
            ðŸ“¦ NPM: https://www.npmjs.com/package/@thewlabs/ts-reset
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
